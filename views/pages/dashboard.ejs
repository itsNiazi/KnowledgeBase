<div class="container">
  <p>Welcome to KnowledgeBase, <%= user.charAt(0).toUpperCase() + user.slice(1)%>!</p>
  <p><%= welcomeText %></p>
</div>

<h1>Live Search Autocomplete</h1>
<input id="searchInput" type="text" placeholder="Search for notes" />

<ul id="searchResults"></ul>

<script>
  const searchInput = document.getElementById("searchInput");
  const searchResults = document.getElementById("searchResults");

  var fuse; // Stores the fuse object, when the note list has been fetch from the server (undefined until then)

  // When page loads, fetch all note titles from the server(db) and create a fuse object
  fetch(`/search`)
    .then((response) => response.json())
    .then((notes) => {
      fuse = new Fuse(notes, {
        keys: ["title"],
        includeMatches: true,
        treshold: 0.3,
        useExtendedSearch: true,
      });
    });

  searchInput.addEventListener("input", function () {
    if (fuse !== undefined) {
      const searchTerm = this.value;

      searchResults.innerHTML = "";

      const results = fuse.search(searchTerm);
      console.log(results);
      results.forEach((result) => {
        const note = result.item;
        const title = note.title;

        const li = document.createElement("li");
        li.textContent = title;

        searchResults.appendChild(li);
      });
    }
  });
</script>

<!-- <script>
  const searchInput = document.getElementById("searchInput");
  const searchResults = document.getElementById("searchResults");
  let debounceTimeout;
  let notes = [];

  searchInput.addEventListener("input", function () {
    clearTimeout(debounceTimeout);

    debounceTimeout = setTimeout(() => {
      const searchTerm = this.value;

      const fuse = new Fuse(notes, {
        keys: ["title"],
        includeMatches: true,
        threshold: 0.4,
      });

      const results = fuse.search(searchTerm).map((result) => result.item);

      renderResults(results);
    }, 300);
  });

  fetch("/search")
    .then((response) => response.json())
    .then((data) => {
      notes = data;
    })
    .catch((error) => {
      console.error("Error fetching notes", error);
    });

  function renderResults(results) {
    searchResults.innerHTML = "";

    results.forEach((note) => {
      const title = note.title;

      const li = document.createElement("li");
      li.textContent = title;

      searchResults.appendChild(li);
    });
  }
</script> -->
